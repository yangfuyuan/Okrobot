<launch>

  <arg name="scan_topic" default="scan" />
  <arg name="laser_frame" default="base_laser_frame" />
  <!--arg name="laser_port" default="2112" /-->


  <node name="sick_tim551_2050001" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
    <!-- default values: -->
    
      <param name="min_ang" type="double" value="-2.35619449019" />
      <param name="max_ang" type="double" value="2.35619449019" />
      <param name="intensity" type="bool" value="True" />
      <param name="skip" type="int" value="0" />
      <param name="frame_id" type="str" value="$(arg laser_frame)" />
      <param name="time_offset" type="double" value="-0.001" />
      <param name="publish_datagram" type="bool" value="False" />
      <param name="subscribe_datagram" type="bool" value="false" />
      <param name="time_increment" type="double" value="0.000061722" />
      <param name="range_min" type="double" value="0.05" />
      <param name="range_max" type="double" value="10.0" />

    <!-- Uncomment this to enable TCP instead of USB connection; 'hostname' is the host name or IP address of the laser scanner
    In cases where a race condition exists and the computer boots up before the TIM is ready, increase 'timelimit.'-->
         <param name="hostname" type="string" value="10.42.0.82" />
         <param name="port" type="string" value="2112" />
         <param name="timelimit" type="int" value="5" />
         <remap from="scan" to="$(arg scan_topic)"/>
  </node>

  <!--we need a static transform for the laser-->
  <node pkg="tf" type="static_transform_publicsher" name="base_scan_to_laser" args="0 0 0 0 0 0 /base_scan_link /laser 100" />
</launch>

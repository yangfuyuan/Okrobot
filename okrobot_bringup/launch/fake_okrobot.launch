<launch>
  <param name="/use_sim_time" value="false" />

  <!-- Load the URDF/Xacro model of our robot -->
  <!--arg name="urdf_file" default="$(find xacro)/xacro.py '$(find okrobot_description)/urdf/okrobot_library.urdf.xacro'" /-->
   
  <!--param name="robot_description" command="$(arg urdf_file)" /-->
  <param name="robot_description" textfile="$(find okrobot_description)/urdf/okrobot_base.URDF" />
    
  <node name="arbotix" pkg="arbotix_python" type="arbotix_driver" output="screen" clear_params="true">
      <rosparam file="$(find okrobot_bringup)/config/fake_okrobot_arbotix.yaml" command="load" />
      <param name="sim" value="true"/>
      <!--remap from="cmd_vel" to="base_cmd_vel"/-->
  </node>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="publish_frequency" type="double" value="20.0" />
  </node>

 <!-- We need a static transforms for the wheels -->  
    <!--node pkg="tf" type="static_transform_publisher" name="odom_left_wheel_broadcaster" args="0 0 0 0 0 0 /base_link /Okrobot_wheel_left_link 100" /-->  
    <!--node pkg="tf" type="static_transform_publisher" name="odom_right_wheel_broadcaster" args="0 0 0 0 0 0 /base_link /Okrobot_wheel_right_link 100" /-->  

  <!-- velocity commands multiplexer -->
  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find okrobot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="base_cmd_vel"/>
  </node>

  <!-- ****************************** Capabilities ****************************** -->
  <arg name="capabilities"                       default="false" doc="enable/disable a capability server" />
  <arg name="capabilities_parameters"            default="$(find rocon_app_manager)/param/capabilities.yaml" doc="detailed parameter configuration for the providers" />
  <arg name="capabilities_blacklist"             default="[]" doc="blacklist specific capabilities" />
  <arg name="capabilities_nodelet_manager_name"  default="capability_server_nodelet_manager" />
  <arg name="capabilities_package_whitelist"     default="[std_capabilities]" doc="get capabilities from these packages only" />
  <arg name="capabilities_server_name"           default="capability_server"/>

  <group if="$(arg capabilities)">
    <include file="$(find rocon_app_manager)/launch/includes/_capabilities.xml">
      <arg name="blacklist"            value="$(arg capabilities_blacklist)" />
      <arg name="nodelet_manager_name" value="$(arg capabilities_nodelet_manager_name)" />
      <arg name="name"                 value="$(arg capabilities_server_name)" />
      <arg name="package_whitelist"    value="$(arg capabilities_package_whitelist)" />
      <arg name="parameters"           value="$(arg capabilities_parameters)" />
    </include>
  </group>

  <!-- ****************************** Rapp Manager ****************************** -->
  <arg name="auto_rapp_installation" default="false" doc="http://wiki.ros.org/rocon_app_manager/Tutorials/indigo/Automatic Rapp Installation" />
  <arg name="auto_start_rapp"        default="" doc="autostart a rapp, e.g. rocon_apps/talker" />
  <arg name="rapp_package_whitelist" default="[rocon_apps]" doc="comma separated list of package names" />
  <arg name="rapp_package_blacklist" default="[]"/>
  <arg name="rapp_preferred_configuration_file" default="$(find rocon_app_manager)/param/preferred_default.yaml"/>
  <arg name="robot_name"             default="Cybernetic Pirate"/>
  <arg name="robot_type"             default="pc"/>
  <arg name="robot_icon"             default="rocon_icons/cybernetic_pirate.png"/>
  <arg name="screen"                 default="true" doc="verbose output from running apps" />
  <arg name="simulation"             default="true" doc="if simulated robot" />

  <include file="$(find rocon_app_manager)/launch/includes/_app_manager.xml">
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="robot_type" value="$(arg robot_type)" />
    <arg name="robot_icon" value="$(arg robot_icon)" />
    <arg name="use_gateway_uuids" value="false" />
    <arg name="rapp_package_whitelist" value="$(arg rapp_package_whitelist)" />
    <arg name="rapp_package_blacklist" value="$(arg rapp_package_blacklist)" />
    <arg name="rapp_preferred_configuration_file" value="$(arg rapp_preferred_configuration_file)" />
    <arg name="auto_start_rapp" value="$(arg auto_start_rapp)" />
    <arg name="screen" value="$(arg screen)" />
    <arg name="simulation" value="$(arg simulation)"/>
    <arg name="auto_rapp_installation" value="$(arg auto_rapp_installation)" />
    <arg name="capability_server_name" default="$(arg capabilities_server_name)"/>
  </include>

  <!-- ***************************** Rocon Master Info ************************** -->
  <arg name="robot_description"      default="To err is human, to 'arr is pirate."/>

  <include file="$(find rocon_app_manager)/launch/includes/_rocon_master_info.xml">
    <arg name="name" value="$(arg robot_name)" />
    <arg name="description" value="$(arg robot_description)" />
    <arg name="icon" value="$(arg robot_icon)" />
  </include>

  <!-- ***************************** Interactions ******************************* -->
  <arg name="interactions"          default="false"/>
  <arg name="interactions_list"    default="[]"/>
  <arg name="rosbridge_address"    default="localhost"/>
  <arg name="rosbridge_port"       default="9090"/>
  <arg name="webserver_address"    default="webapp.robotconcert.org"/>

  <group if="$(arg interactions)">
    <include file="$(find rocon_app_manager)/launch/includes/_interactions.xml">
      <arg name="interactions_list" value="$(arg interactions_list)"/>
      <arg name="rosbridge_address" value="$(arg rosbridge_address)"/>
      <arg name="rosbridge_port"    value="$(arg rosbridge_port)"/>
      <arg name="webserver_address" value="$(arg webserver_address)"/>
    </include>
  </group>

  <!-- ******************************** Zeroconf ******************************** -->
  <arg name="zeroconf"      default="false"/>
  <arg name="zeroconf_name" default="$(arg robot_name)"/>
  <arg name="zeroconf_port" default="11311"/>

  <group if="$(arg zeroconf)">
    <include file="$(find rocon_app_manager)/launch/includes/_zeroconf.xml">
      <arg name="name" value="$(arg zeroconf_name)"/>
      <arg name="port" value="$(arg zeroconf_port)"/>
    </include>
  </group>
</launch>
